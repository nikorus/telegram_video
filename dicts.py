"""
1. ПАРСИНГ СЛОВАРЯ
"""
d = {'a': '1', 'inplay': 'True', 'b': '2'}

# 1.1. Повторить набор ключей в словаре
print('000*************************************')
for key in d:
    value = d[key]
    print(key, value)
# Результат
# a 1
# inplay True
# b 2

print('001*************************************')
# 1.2. Аналогичный результат 1.1
for key in d.keys():
    value = d[key]
    print('\t', key, value)
# 001*************************************
# 	 a 1
# 	 inplay True
# 	 b 2

print('000*************************************')
# 1.3. Вывод из словаря набора пар ключ-значение
for key, value in d.items():
    print('\t', '\t', key, value)
# Результат
# 000*************************************
# 	 	 a 1
# 	 	 inplay True
# 	 	 b 2

'''
2. ПАРСИНГ СПИСКА ИЗ СЛОВАРЕЙ
            my_list 
'''
my_list = [{'a': '1', 'inplay': 'True', 'b': '2'},
           {'c': '3', 'd': '4'},
           {'e': '5', 'inplay': 'False', 'f': '6'}]
print('002*************************************')
'''
2.1. Вариант 1 Парсинг списка словарей
Функцией enumerate(), примененной к вашему списку my_list, получим в переменной result порядковй номер 
очередного словаря в списке, и в переменной dic_ сам элемент — словарь.
'''
for result, dic_ in enumerate(my_list):
    print('выводит очередной номер словаря и сам словарь')
    print(result, dic_, '\n')  # выводит очередной номер словаря и сам словарь
    print('выводит очередной ключ текущего словаря и его параметр')
    for key, val in dic_.items():
        print('\t', key, ':', val)  # выводит очередной ключ текущего словаря и его параметр

# Результат
# 002*************************************
# выводит очередной номер словаря и сам словарь
# 0 {'a': '1', 'inplay': 'True', 'b': '2'}
#
# выводит очередной ключ текущего словаря и его параметр
# 	 a : 1
# 	 inplay : True
# 	 b : 2
# выводит очередной номер словаря и сам словарь
# 1 {'c': '3', 'd': '4'}
#
# выводит очередной ключ текущего словаря и его параметр
# 	 c : 3
# 	 d : 4
# выводит очередной номер словаря и сам словарь
# 2 {'e': '5', 'inplay': 'False', 'f': '6'}
#
# выводит очередной ключ текущего словаря и его параметр
# 	 e : 5
# 	 inplay : False
# 	 # f : 6

'''
2.2. Вариант 2 Парсинг списка словарей, указывая его порядковый номер в списке
'''
print('6*************************************')
dt1 = my_list[0]
for key1, value in dt1.items():
    print(key1, ':', value)
# Результат
# a : 1
# inplay : True
# b : 2

'''
3. ПАРСИНГ СЛОВАРЯ, СОДЕРЖАЩЕГО СПИСОК ИЗ СЛОВАРЕЙ
                    r
выбираем из словаря r список словарей по его ключу 'data';
выводим на печать очередной номер словаря и сам словарь; затем 
из текущего словаря  dic выводится очередной ключ key _и его значение val
'''
r = {'code': '0',
     'data': [{'alias': 'X', 'baseCcy': 'TESTPM', 'category': '1'},
              {'alias': 'F', 'baseCcy': 'XRP', 'category': '2'},
              {'alias': 'M', 'baseCcy': 'SOL', 'category': '3'}],
     'msg': 'First'}

# 3.1. Вариант 1 Применение enumerate к списку словарей в словаре
print('003A*************************************')
res3 = r['data']  # выбираем из словаря список словарей по его ключу
for result, dic_ in enumerate(res3):
    print('выводим очередной номер словаря и сам словарь ')
    print(result, dic_, '\n')  # выводим очередной номер словаря и сам словарь ; '\n' - перевод печати на новую строку
    print('из текущего словаря  dic выводится очередной ключ key _и его значение val')
    for key, val in dic_.items():
        print('\t', key, ':', val)  # из текущего словаря  dic выводится очередной ключ key _и его значение val
# Результат
# 003A*************************************
# 0 {'alias': 'X', 'baseCcy': 'TESTPM', 'category': '1'}
#
# 	 alias : X
# 	 baseCcy : TESTPM
# 	 category : 1
# 1 {'alias': 'F', 'baseCcy': 'XRP', 'category': '2'}
#
# 	 alias : F
# 	 baseCcy : XRP
# 	 category : 2
# 2 {'alias': 'M', 'baseCcy': 'SOL', 'category': '3'}
#
# 	 alias : M
# 	 baseCcy : SOL
# 	 category : 3

# 3.2. Вариант 2 Прямое обращения к словарю по его номеру в списке
print('7*************************************')
dt2 = r['data'][0]
for key1, value in dt2.items():
    print(key1, ':', value)
# Результат
# alias : X
# baseCcy : TESTPM
# category : 1


# 3.3. Вариант 3 Выборка словаря, содержащего заданное имя ключа и заданный в нем параметр
print('003B*************************************')


def find_all_by_key(iterable, key, value):
    for result, dic_ in enumerate(iterable):
        if dic_.get(key, '') == value:
            return result, dic_
            # break;
    else:
        result = None


'''
Ищем словарь, содержащий ключ "baseCcy""с нужным параметром  "TESTPM"и выводим номер словаря в списке т сам словарь
выводим порядковый номер словаря в списке
'''
print(find_all_by_key(res3, "baseCcy", "TESTPM"))
# Результат
# (0, {'alias': 'X', 'baseCcy': 'TESTPM', 'category': '1'})

print('003C*************************************')
'''
Вышереалиованный парсинг применительно к списку my_list
'''
print(find_all_by_key(my_list, "inplay", "False"))
# Результат
# (2, {'e': '5', 'inplay': 'False', 'f': '6'})


# 3.4. Вариант 4 Прямая выборка значения (одиночный параметр) по ключу
print('1*************************************')

print(r.get('code'))
# Результат
# 0

# 3.5. Вариант 5  Прямая выборка  содержимого списка словарей (списка параметров) по ключу
        # Код дает аналогичный результат с res3 = r['data']
print('2*************************************')
print(r.get('data'))  # аналогично записи res3 = r['data']
# Результат
# [{'alias': 'X', 'baseCcy': 'TESTPM', 'category': '1'}, {'alias': 'F', 'baseCcy': 'XRP', 'category': '2'},
# {'alias': 'M', 'baseCcy': 'SOL', 'category': '3'}]

print('3*************************************')
# 3.6. Вариант 6 Прямая выборка  содержимого  словаря из списка (списка параметров) по ключу
                # и выборка вложенного словаря по номеру в списке

print(r.get('data')[1])
# Результат
# {'alias': 'F', 'baseCcy': 'XRP', 'category': '2'}
print('4*************************************')
